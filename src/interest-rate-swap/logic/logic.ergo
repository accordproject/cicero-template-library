/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace org.accordproject.isda.irs

import org.accordproject.runtime.*

define function compoundInterestMultiple(annualInterest : Double, numberOfDays : Double) : Double {
    return (1.0 + annualInterest) ^ (numberOfDays / 365.0)
}

contract SimpleInterestRateSwap over InterestRateSwapContract {
  clause check(request : RateObservation) : Result {
    enforce contract.fixedRate >= 0.0
    else throw failure("Fixed rate cannot be negative");
    enforce contract.notionalAmount.doubleValue >= 0.0
    else throw failure("Notional amount cannot be negative");
    return Result{
      outstandingBalance: 10.0
    }
  }
}