/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace org.accordproject.payment.initialuponsignature

import org.accordproject.cicero.runtime.*

contract InitialPaymentUponSignature over InitialPaymentUponSignatureContract state InitialPaymentUponSignatureState {
  /**
	 * The initialization logic for this clause immediately notifies the buyer that they have an obligation to make a payment
	 */
  clause init(request : Request) : Response emits PaymentObligation {
	  // enforce (state.status = "UNINTIALIZED") 
    // else throw ErgoErrorResponse{ message: "This contract has already been initialized. Current state is " ++ state.status };
		
    emit PaymentObligation{
			contract: contract,
			promisor: some(contract.buyer),
			promisee: some(contract.seller),
			deadline: none,
			amount: contract.InitialPayment,
			description: contract.buyer.partyId ++ " should pay contract amount to " ++ contract.seller.partyId
		};
		set state InitialPaymentUponSignatureState {
			stateId: "1",
			status: "OBLIGATION_EMITTED"
		};
    return Response{}
  }

  /**
	 * Update the contract state once we've recieved a payment
	 */
  clause paymentReceived(request : PaymentReceivedRequest): PaymentReceivedResponse {
    enforce (state.status = "OBLIGATION_EMITTED") 
    else throw ErgoErrorResponse{ message: "Either a payment obligation hasn't yet been emitted by the contract or payment notification has already been received" };
		set state InitialPaymentUponSignatureState {
			stateId: state.stateId,
			status: "COMPLETED"
		};
		return PaymentReceivedResponse{}
  }

}
